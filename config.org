* 在docker里使用emacs——系统为centos7.9.2009
** 配置文件整理
*** Dockerfile
:PROPERTIES:
:HEADER-ARGS: :tangle Dockerfile
:END:

#+BEGIN_SRC python3
FROM centos:7.9.2009

RUN yum install kde-l10n-Chinese -y
RUN yum reinstall glibc-common -y
RUN localedef -c -f UTF-8 -i zh_CN zh_CN.utf8
ENV LC_ALL zh_CN.UTF-8

RUN yum install -y curl-devel expat-devel gettext-devel openssl-devel zlib-devel

RUN yum install -y perl-ExtUtils-MakeMaker

RUN yum install -y centos-release-scl

RUN yum install -y curl gnupg openssh-client wget gcc g++ cmake

RUN yum install -y GConf2-devel Xaw3d-devel devtoolset-9-gcc devtoolset-9-libgccjit-devel dbus-devel dbus-glib-devel dbus-python gcc giflib-devel gnutls-devel gpm-devel gtk+-devel gtk2-devel ImageMagick ImageMagick-devel jansson-devel libX11-devel libXft-devel libXpm-devel libjpeg-devel libpng-devel libtiff-devel libungif-devel make ncurses-devel pkgconfig texi2html texinfo

RUN yum install -y glibc-headers gcc-c++ fd expat-devel libcurl-dev libcurl-devel

RUN mkdir -p /tmp

RUN cd /tmp;  wget https://github.com/git/git/archive/v2.34.1.tar.gz; tar -xvf v2.34.1.tar.gz; rm -f v2.34.1.tar.gz; cd git-2.34.1; make configure; ./configure --prefix=/usr; make -j 10; make install

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

# RUN cd /tmp;  git clone https://github.com/BurntSushi/ripgrep; cd ripgrep; cargo build --release

COPY ./emacs /tmp/emacs28.1
RUN cd /tmp/emacs28.1; ./autogen.sh; ./configure --without-selinux --without-x --without-dbus --without-sound && make -j 10 && make install


CMD ["emacs"]
#+END_SRC

*** docker-compose.yaml
:PROPERTIES:
:HEADER-ARGS: :tangle docker-compose.yaml
:END:

#+BEGIN_SRC python3
version: '3'
services:
  emacs:
    build: .
    volumes:
      - /:/volumes  # 映射当前目录到容器的 /workspace 目录
      - ./emacs.d:/root/.emacs.d  # 映射当前目录到容器的 /workspace 目录
    command: emacs --daemon # 启动 Emacs 以守护进程模式运行
    tty: true  # 保持容器运行，即使没有交互式命令运行
#+END_SRC
 
** 代码执行
# #+BEGIN_SRC shell
# pwd
# #+BEGIN_SRC
